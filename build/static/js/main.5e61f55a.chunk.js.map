{"version":3,"sources":["Discovery/Discovery.module.css","Discovery/Discovery.js","App.js","index.js"],"names":["module","exports","Discovery","baseUrl","serviceName","state","error","code","msg","reason","loaded","mainItems","key","name","showRight","changeIdx","event","idx","setState","selIdx","detailIdx","target","scrollIntoView","behavior","inline","block","changeDetailIdx","data","services","forEach","service","node","domain","domainName","host","hostName","ipv4","addresses","ipv6","type","subtype","port","String","record","txtRecord","push","this","fetch","headers","then","res","a","json","resp","ok","message","process","REACT_APP_DISCOVERY_URL","parseData","catch","method","body","JSON","stringify","replaceWildcards","serviceProtocol","version","provider","product","path","window","location","protocol","hostname","response","requestServices","loadData","Date","now","Object","keys","map","className","classes","Row","onFocus","onKeyUp","props","hideMenu","Name","replace","Address","Number","length","index","ip","InfoWrap","ser","InfoRow","Type","startsWith","includes","BtnWrap","Btn","onClickEnter","open","getLink","item","Array","isArray","it","InfoValue","sectionId","neighborUp","neighborDown","neighborLeft","neighborRight","RightPanel","Show","Hide","Frame","getButton","InfoTitle","DetailRow","InfoHead","getDetailValue","ref","modalRef","ServiceWrap","ErrorWrap","style","width","src","alt","ErrorCode","ErrorMsg","Background","Title","LeftPanel","TextCenter","getNodes","MidPanel","getServices","getServiceDetail","getMenu","Component","App","keyCode","history","back","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.5e61f55a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"Discovery_Item__2ukVt\",\"Title\":\"Discovery_Title__3eT40\",\"Back\":\"Discovery_Back__mo5C4\",\"Background\":\"Discovery_Background__qOefW\",\"LeftPanel\":\"Discovery_LeftPanel__3tiIc\",\"MidPanel\":\"Discovery_MidPanel__3hlkj\",\"RightPanel\":\"Discovery_RightPanel__1Ve4X\",\"Show\":\"Discovery_Show__2ClRv\",\"Hide\":\"Discovery_Hide__2KeSg\",\"ServiceWrap\":\"Discovery_ServiceWrap__a_rbe\",\"ErrorWrap\":\"Discovery_ErrorWrap__2_6L0\",\"Frame\":\"Discovery_Frame__iP-QS\",\"Row\":\"Discovery_Row__39C1C\",\"InfoRow\":\"Discovery_InfoRow__1PJ3D\",\"DetailRow\":\"Discovery_DetailRow__2Dlb4\",\"Address\":\"Discovery_Address__xKNFP\",\"Name\":\"Discovery_Name__3Qyxh\",\"Type\":\"Discovery_Type__21KWU\",\"InfoWrap\":\"Discovery_InfoWrap__3mfmW\",\"InfoHead\":\"Discovery_InfoHead__1FkrL\",\"InfoValue\":\"Discovery_InfoValue__3FvNy\",\"BtnWrap\":\"Discovery_BtnWrap__WnakS\",\"Btn\":\"Discovery_Btn__jm9RC\",\"TextCenter\":\"Discovery_TextCenter__AQr-M\",\"InfoTitle\":\"Discovery_InfoTitle__2t5M3\",\"slideInFromLeft\":\"Discovery_slideInFromLeft__3X5RV\",\"slideOutFromRight\":\"Discovery_slideOutFromRight__3ENQr\"};","\nimport React, { Component } from 'react';\nimport Control from './../shared/Control';\nimport { Focusable, FocusableSection } from 'react-js-spatial-navigation';\nimport classes from './Discovery.module.css';\n\nclass Discovery extends Component {\n    baseUrl = 'http://localzeroconf:15051/a1/xploretv/v1/zeroconf';\n    serviceName = 'TV Dashboard';\n    state = {error: {code: 'Unknown', msg: 'Error', reason: 'Failed to fetch'}};\n    loaded = 0;\n    mainItems = [{key: 'ipv4', name: 'IPv4'}, {key: 'ipv6', name: 'IPv6'}, {key: 'port', name: 'Port'}, {key: 'name', name: 'Name'}, { key: 'domain', name: 'Domain'},\n                 { key: 'host', name: 'Host'}, {key: 'type', name: 'Service Type'}, { key: 'subtype', name: 'Service Subtype'}]\n    showRight = false;\n\n\n    parseData(data){\n        const services = {};\n        data.forEach(service => {\n            const node = {name: service.name, domain: service.domainName, host: service.hostName, ipv4: service.addresses.ipv4, ipv6: service.addresses.ipv6,\n                          type: service.service.type, subtype: service.service.subtype, port: String(service.service.port), record: service.service.txtRecord};\n            if (service.hostName in services){\n                services[service.hostName].push(node);\n            } else {\n                services[service.hostName] = [node];\n            }\n        });\n        if ('services' in this.state){\n            this.setState({services: services});\n        } else {\n            this.setState({services: services, selIdx: 0, detailIdx: 0, error: false});\n        }\n    }\n\n    requestServices(){\n            fetch(this.baseUrl, {\n                headers: { 'Content-Type': 'application/json' },\n            })\n            .then(async res => {\n                const resp = await res.json();\n                if (!res.ok){\n                    return this.setState({ error: { code: resp.code, msg: resp.message, reason: resp.reason, host: process.env.REACT_APP_DISCOVERY_URL } });\n                }\n                return this.parseData(resp.services);\n            }).catch(error => {\n                return this.setState({error: {code: 'Unknown', msg: 'Error', reason: error.message, host: process.env.REACT_APP_DISCOVERY_URL}});\n            });\n    }\n\n    loadData() {\n        if (this.loaded === 0)\n        {\n            fetch(this.baseUrl, {\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(\n                {\n                    name: this.serviceName,\n                    replaceWildcards: true,\n                    serviceProtocol: 'any',\n                    service: {\n                        type: '_http._tcp',\n                        port: 80,\n                        txtRecord: {\n                            version: '1.0',\n                            provider: 'A1 Telekom Austria Group',\n                            product: 'A1 Service Discovery',\n                            path:  window.location.protocol + '//' + window.location.hostname + ':' + window.location.port,\n                        }\n                    }\n                }\n            )\n            })\n            .then(response => response.json())\n            .then(response => {\n                if (response.code !== 201 && response.code !== 409){\n                    return this.setState({error: {code: response.code, msg: response.message, reason: response.reason, host: this.baseUrl}});\n                }\n                this.requestServices();\n            })\n            .catch(error => {\n                return this.setState({error: {code: 'Unknown', msg: 'Error', reason: error.message, host: this.baseUrl}});\n            })\n        } else {\n            this.requestServices();\n        }\n\n\n    }\n\n    componentDidMount(){\n            this.loadData();\n            this.loaded = Date.now();\n        }\n\n    changeIdx = (event, idx) => {\n        if ('services' in this.state){\n            this.showRight = false;\n            this.setState({selIdx: idx, detailIdx: 0});\n            event.target.scrollIntoView({behavior: 'smooth', inline: 'center', block: 'center'});\n        }\n    }\n\n    changeDetailIdx = (event, idx) => {\n        if ('services' in this.state){\n            this.showRight = true;\n            this.setState({detailIdx: idx});\n            event.target.scrollIntoView({behavior: 'smooth', inline: 'center', block: 'center'});\n        }\n    }\n\n    getNodes(){\n        if ('services' in this.state){\n            return (Object.keys(this.state.services).map((key, idx) => {\n                return(\n                    <Focusable className={classes.Row + (idx === 0 ? ' menu-active' : '')} key={idx}\n                        onFocus={(event) => this.changeIdx(event, idx)}\n                        onKeyUp={(event) => this.props.hideMenu(event)}>\n                        <p className={classes.Name}>{this.state.services[key][0].host.replace(/(.local.$|.$)/i, '')}</p>\n                        <p className={classes.Address}>{this.state.services[key][0].ipv4[0]}\n                        <span className={classes.Number}> ({this.state.services[key].length === 1 ? 'One service' : this.state.services[key].length + ' services'})</span>\n                        </p>\n                    </Focusable>\n                )\n            })\n            )\n        }\n    }\n\n    getServices(){\n        if ('services' in this.state){\n            let index = this.state.selIdx;\n            if (this.state.selIdx > Object.keys(this.state.services).length) {\n                index = 0;\n            }\n\n            const service = this.state.services[Object.keys(this.state.services)[index]];\n            return (\n                <>\n                    <p className={classes.Address}>Address</p>\n                    <p className={classes.Name}>{service[0].host}</p>\n                    {service[0].ipv4.map((ip, idx) => {\n                        return(<p key={'ipv4-' + idx} className={classes.Name}>{ip}</p>)\n                    })}\n                    {service[0].ipv6.map((ip, idx) => {\n                        return(<p key={'ipv6-' + idx} className={classes.Name}>{ip}</p>)\n                    })}\n                    <div className={classes.InfoWrap}>\n                        <p className={classes.Address}>Services</p>\n                        {service.map((ser, idx) => {\n                            return(\n                                <Focusable className={classes.InfoRow} key={idx}\n                                    onFocus={(event) => this.changeDetailIdx(event, idx)}\n                                    onKeyUp={(event) => this.props.hideMenu(event)}>\n                                    <p className={classes.Name}>{ser.name}</p>\n                                    <p className={classes.Type}>{ser.type}</p>\n                                </Focusable>\n                            )\n                        })}\n                    </div>\n                </>\n            )\n        }\n    }\n\n    getLink(service, ip){\n        let url = \"\";\n        if (service.record['get'] && service.record['get'].startsWith('http')){\n            url = service.record['get'];\n        } else {\n            url = 'http://' + ip + ':' + String(service['port']) + (service.record['get'] ? service.record['get'] : '');\n        }\n        return url;\n    }\n\n    getButton(service){\n        if (service['type'].includes('http')){\n            return(service['ipv4'].map((ip, idx) => {\n                return(\n                    <div className={classes.BtnWrap} key={'open_btn-' + idx}>\n                        <Focusable className={classes.Btn} onClickEnter={() => {window.open(this.getLink(service, ip), '_blank')}}>\n                            {service['ipv4'].length > 1 ? 'Open (' + idx +')': 'Open'}\n                        </Focusable>\n                    </div>\n                )\n            }))\n        }\n    }\n\n    getDetailValue(service, item){\n        if (Array.isArray(service[item.key])){\n            return (service[item.key].map((it, idx) => {\n                return(<p key={item.key + '-' + idx} className={classes.InfoValue}>{it}</p>)\n            }))\n        } else {\n            return(<p className={classes.InfoValue}>{service[item.key]}</p>)\n        }\n    }\n\n    getServiceDetail(){\n        if ('services' in this.state){\n            let index = this.state.detailIdx;\n            if (this.state.services[Object.keys(this.state.services)[this.state.selIdx]].length < index + 1){\n                index = 0;\n                return\n            }\n\n            const service = this.state.services[Object.keys(this.state.services)[this.state.selIdx]][index];\n            return(\n                <FocusableSection sectionId='detail-service'\n                    neighborUp=''\n                    neighborDown=''\n                    neighborLeft='@detail-services'\n                    neighborRight=''\n                    className={classes.RightPanel + ' ' + (this.showRight ? classes.Show : classes.Hide)}>\n                        <div className={classes.Frame}>\n                            {this.getButton(service)}\n                            <p className={classes.InfoTitle}>Core</p>\n                            {this.mainItems.map((item, idx) => {\n                                if (service[item.key] && service[item.key].length > 0){\n                                    return(\n                                        <Focusable className={classes.DetailRow} key={'detail_' + idx}\n                                            onFocus={(event) => {event.target.scrollIntoView({behavior: 'smooth', inline: 'center', block: 'center'})}}>\n                                            <p className={classes.InfoHead}>{item.name}</p>\n                                            {this.getDetailValue(service, item)}\n                                        </Focusable>\n                                    )\n                                } else return(null)\n                            })}\n                            <br></br>\n                            <p className={classes.InfoTitle}>Data</p>\n                            {Object.keys(service.record).map((item) => {\n                                return(\n                                    <Focusable className={classes.DetailRow} key={item}\n                                        onFocus={(event) => {event.target.scrollIntoView({behavior: 'smooth', inline: 'center', block: 'center'})}}>\n                                        <p className={classes.InfoHead}>{item}</p>\n                                        <p className={classes.InfoValue}>{service.record[item]}</p>\n                                    </Focusable>\n                                )\n                            })}\n                        </div>\n                </FocusableSection>\n            )\n        }\n    }\n    getMenu() {\n\n            if (this.state.error !== false){\n                return(\n                        <div className={'modal-menu'} ref={this.props.modalRef}>\n                            <div className={classes.ServiceWrap}>\n                                <FocusableSection sectionId='main-service'\n                                        className={classes.ErrorWrap}>\n                                    <div className=\"Error-item\">\n                                        <img style={{width: '100%'}} src={process.env.PUBLIC_URL + '/ws_error.svg'} alt=\"Error\"/>\n                                    </div>\n                                    <div className=\"Error-item\"><strong>Ups, da ist etwas schief gelaufen.</strong> Wahrscheinlich fehlt das Zeroconfiguration Networking Service. Bitte wenden Sie sich an den Gerätehersteller oder an Ihren Dienstanbieter.</div>\n                                    <div className=\"Error-item\"><strong>Ooops, something went wrong.</strong> Probably the Zeroconfiguration Networking Service is missing. Please contact the device manufacturer or your service provider.</div>\n                                    <div className={classes.ErrorCode}><strong>Host:</strong> {this.state.error.host}</div>\n                                    <div className={classes.ErrorCode}><strong>Code:</strong> {this.state.error.code}</div>\n                                    <div className={classes.ErrorMsg}><strong>{this.state.error.msg}:</strong> {this.state.error.reason}</div>\n                                </FocusableSection>\n                            </div>\n                        </div>\n                )\n            } else {\n                return(\n                <div className={classes.Background}>\n                <h1 className={classes.Title}>Service Discovery</h1>\n                <div className={classes.ServiceWrap}>\n                    <FocusableSection sectionId='main-service'\n                        neighborUp=''\n                        neighborDown=''\n                        neighborRight='@detail-services'\n                        className={classes.LeftPanel}>\n                            <div className={classes.Frame}>\n                                <p className={classes.Address + ' ' + classes.TextCenter}>Hosts</p>\n                                {this.getNodes()}\n                            </div>\n                    </FocusableSection>\n                    <FocusableSection sectionId='detail-services'\n                        neighborUp=''\n                        neighborDown=''\n                        neighborLeft='@main-service'\n                        neighborRight='@detail-service'\n                        className={classes.MidPanel}>\n                            <div className={classes.Frame}>\n                                {this.getServices()}\n                            </div>\n                    </FocusableSection>\n                    {this.getServiceDetail()}\n                </div>\n            </div>\n                )\n            }\n        }\n\n    render(){\n        return (\n            this.getMenu()\n\n        );\n                     }\n}\n\nexport default Discovery;\n","import './App.css';\nimport React from 'react';\nimport Discovery from './Discovery/Discovery';\nimport SpatialNavigation from 'react-js-spatial-navigation';\n\n\nfunction App() {\n  const hideMenuHandler = (event, key = true) => {\n    const keys = [8, 27, 403, 461];\n    if (keys.includes(event.keyCode) || key === false){\n      window.history.back();\n    }\n  }\n  return (\n    <div className=\"App\">\n      <SpatialNavigation className=\"App\">\n        <Discovery hideMenu={hideMenuHandler}/>\n      </SpatialNavigation>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}